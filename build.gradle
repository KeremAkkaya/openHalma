//noinspedocersion = '1.3.5.RELEASE'
//noinspection GroovyAssignabilityCheck
buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
}
repositories {
		mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'docker'

springBoot {
	mainClass = "oss.openHalmaApplication" //fix gradle not finding main class
}

task buildDocker(type: Docker, dependsOn: build) {
	push = false
	applicationName = jar.baseName.toLowerCase();
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

jar {
	baseName = 'openhalma'
	version = '1.0.0-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
    //compile('org.springframework.boot:spring-boot-starter-data-mongodb') //GIT: change to mongodb in commit before
	compile("org.springframework.boot:spring-boot-starter-data-rest")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    }


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}